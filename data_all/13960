you have InBecka got it so in InBecka you know you have like loose or strict configuration or as a minimum match configuration right so I'm assuming it's set to something loose is equivalent to an or-ing so from that aspect let me quickly show you why that is happening. and what is it that Unbxd is actually coming in and fixing so Inbecka solar elasticsearch all of them use a a algorithm called TF -IDF that was developed in the 1970s their base algorithm so to demonstrate the limitations of TF -IDF let us do a search for women's like jeans and I see this white top and the blue numbers are the TF -IDF scores now why is that a white top getting a higher score than a jean is because tf-idf only gives you popularity or their rarity score what that means is let's say you had a catalogue with thousand black chair and ten white shoes just making that up to 8000 black chairs and ten white shoes now let's say if I searched for white chairs you don't have any but let's say I assume I spiritual white chairs what if I didn't look at it and say I see white shows up only ten times out of a thousand and ten time but chair shows up a thousand times out of a thousand and ten times so why it's pretty rare so I'm going so which means it might be more important so I'm going to show products that have white in it up top so it ends up showing you white shoes instead of chairs now even though you don't have white chairs you still might want to show black shirts you might want to show a message to say we don't have any white chairs but here's some black shirt you definitely don't want to shoot shoot and that's what TF IDF does and that's why we can take out a lot of times you see a lot of different sets of products and you have to manually fix the relevancy by using their merchandising.,
